package teris.game.shape;

import com.jme3.asset.AssetManager;
import com.jme3.material.Material;
import com.jme3.scene.Geometry;
import com.jme3.scene.Mesh;
import com.jme3.scene.VertexBuffer.Type;
import com.jme3.texture.Texture;
import com.jme3.util.BufferUtils;

/**
 * 方块的几何形状。
 * @author yanmaoyuan
 *
 */
public class BoxGeometry extends Geometry{

	private Material material;
	private Texture tex;
	
	/**
	 * 创建一个方块形状，通过color参数可以指定这个形状的颜色。
	 * @param assetManager
	 * @param color
	 * "red", "blue", "orange", "cyan", "green", "purple", "yellow"
	 */
	public BoxGeometry(AssetManager assetManager, String color) {
		
		this.setName(color);
		this.setMesh(customMesh());
		
		material = new Material(assetManager, "Common/MatDefs/Light/Lighting.j3md");
		setMaterial(material);
		
		switch(color){
		case "red":
			tex = assetManager.loadTexture("Textures/red.png");
			break;
		case "orange":
			tex = assetManager.loadTexture("Textures/orange.png");
			break;
		case "blue":
			tex = assetManager.loadTexture("Textures/blue.png");
			break;
		case "green":
			tex = assetManager.loadTexture("Textures/green.png");
			break;
		case "purple":
			tex = assetManager.loadTexture("Textures/purple.png");
			break;
		case "yellow":
			tex = assetManager.loadTexture("Textures/yellow.png");
			break;
		case "cyan":
			tex = assetManager.loadTexture("Textures/cyan.png");
			break;
		};
		if (tex != null) material.setTexture("DiffuseMap", tex);
	}
	
	/**
	 * 自定义网格
	 * @return
	 */
	private Mesh customMesh() {
		Mesh mesh = new Mesh();
		
		// 顶点
		mesh.setBuffer(Type.Position, 3, BufferUtils.createFloatBuffer(vertexes));
		// 纹理坐标
		mesh.setBuffer(Type.TexCoord, 2, BufferUtils.createFloatBuffer(texcoords));
		// 顶点法线
		mesh.setBuffer(Type.Normal, 3, BufferUtils.createFloatBuffer(normals));
		// 顶点索引(面)
		mesh.setBuffer(Type.Index, 3, BufferUtils.createIntBuffer(faces));
		
		mesh.setStatic();// 设为静态使用
		mesh.updateBound();
		mesh.updateCounts();
		
		return mesh;
	}

	// 自定义网格数据
	static float[] vertexes = {
		-0.400010f, -0.500000f, -0.400010f,
		0.400010f, -0.500000f, 0.400010f,
		0.400010f, -0.500000f, -0.400010f,
		-0.400010f, -0.500000f, 0.400010f,
		-0.470714f, -0.470714f, -0.400010f,
		-0.470714f, -0.470714f, 0.400010f,
		-0.400010f, -0.470714f, 0.470714f,
		0.400010f, -0.470714f, 0.470714f,
		0.470714f, -0.470714f, 0.400010f,
		0.470714f, -0.470714f, -0.400010f,
		0.400010f, -0.470714f, -0.470714f,
		-0.400010f, -0.470714f, -0.470714f,
		-0.456908f, -0.456908f, 0.456908f,
		0.456908f, -0.456908f, 0.456908f,
		-0.456908f, -0.456908f, -0.456908f,
		0.456908f, -0.456908f, -0.456908f,
		0.400010f, -0.400010f, 0.500000f,
		-0.400010f, 0.400010f, 0.500000f,
		0.400010f, 0.400010f, 0.500000f,
		-0.400010f, -0.400010f, 0.500000f,
		0.400010f, -0.470714f, 0.470714f,
		-0.400010f, -0.470714f, 0.470714f,
		-0.470714f, -0.400010f, 0.470714f,
		-0.470714f, 0.400010f, 0.470714f,
		0.470714f, 0.400010f, 0.470714f,
		0.470714f, -0.400010f, 0.470714f,
		-0.400010f, 0.470714f, 0.470714f,
		0.400010f, 0.470714f, 0.470714f,
		-0.456908f, -0.456908f, 0.456908f,
		0.456908f, -0.456908f, 0.456908f,
		-0.456908f, 0.456908f, 0.456908f,
		0.456908f, 0.456908f, 0.456908f,
		-0.500000f, 0.400010f, 0.400010f,
		-0.500000f, -0.400010f, -0.400010f,
		-0.500000f, 0.400010f, -0.400010f,
		-0.500000f, -0.400010f, 0.400010f,
		-0.470714f, -0.470714f, 0.400010f,
		-0.470714f, -0.470714f, -0.400010f,
		-0.470714f, 0.400010f, 0.470714f,
		-0.470714f, -0.400010f, 0.470714f,
		-0.470714f, 0.470714f, -0.400010f,
		-0.470714f, 0.470714f, 0.400010f,
		-0.470714f, -0.400010f, -0.470714f,
		-0.470714f, 0.400010f, -0.470714f,
		-0.456908f, -0.456908f, 0.456908f,
		-0.456908f, 0.456908f, 0.456908f,
		-0.456908f, 0.456908f, -0.456908f,
		-0.456908f, -0.456908f, -0.456908f,
		0.500000f, -0.400010f, -0.400010f,
		0.500000f, 0.400010f, 0.400010f,
		0.500000f, 0.400010f, -0.400010f,
		0.500000f, -0.400010f, 0.400010f,
		0.470714f, -0.470714f, -0.400010f,
		0.470714f, -0.470714f, 0.400010f,
		0.470714f, -0.400010f, 0.470714f,
		0.470714f, 0.400010f, 0.470714f,
		0.470714f, 0.470714f, 0.400010f,
		0.470714f, 0.470714f, -0.400010f,
		0.470714f, 0.400010f, -0.470714f,
		0.470714f, -0.400010f, -0.470714f,
		0.456908f, -0.456908f, 0.456908f,
		0.456908f, 0.456908f, 0.456908f,
		0.456908f, 0.456908f, -0.456908f,
		0.456908f, -0.456908f, -0.456908f,
		0.400010f, 0.500000f, 0.400010f,
		-0.400010f, 0.500000f, -0.400010f,
		0.400010f, 0.500000f, -0.400010f,
		-0.400010f, 0.500000f, 0.400010f,
		-0.470714f, 0.470714f, 0.400010f,
		-0.470714f, 0.470714f, -0.400010f,
		0.400010f, 0.470714f, 0.470714f,
		-0.400010f, 0.470714f, 0.470714f,
		0.470714f, 0.470714f, -0.400010f,
		0.470714f, 0.470714f, 0.400010f,
		-0.400010f, 0.470714f, -0.470714f,
		0.400010f, 0.470714f, -0.470714f,
		-0.456908f, 0.456908f, 0.456908f,
		0.456908f, 0.456908f, 0.456908f,
		-0.456908f, 0.456908f, -0.456908f,
		0.456908f, 0.456908f, -0.456908f,
		0.400010f, 0.400010f, -0.500000f,
		-0.400010f, -0.400010f, -0.500000f,
		0.400010f, -0.400010f, -0.500000f,
		-0.400010f, 0.400010f, -0.500000f,
		-0.470714f, 0.400010f, -0.470714f,
		-0.470714f, -0.400010f, -0.470714f,
		0.400010f, 0.470714f, -0.470714f,
		-0.400010f, 0.470714f, -0.470714f,
		0.470714f, -0.400010f, -0.470714f,
		0.470714f, 0.400010f, -0.470714f,
		-0.400010f, -0.470714f, -0.470714f,
		0.400010f, -0.470714f, -0.470714f,
		-0.456908f, 0.456908f, -0.456908f,
		0.456908f, 0.456908f, -0.456908f,
		-0.456908f, -0.456908f, -0.456908f,
		0.456908f, -0.456908f, -0.456908f
	};

	static float[] normals = {
		-0.185407f, -0.965012f, -0.185407f,
		0.185407f, -0.965012f, 0.185407f,
		0.185407f, -0.965012f, -0.185407f,
		-0.185407f, -0.965012f, 0.185407f,
		-0.695034f, -0.695033f, -0.184001f,
		-0.695034f, -0.695034f, 0.184001f,
		-0.184000f, -0.695034f, 0.695034f,
		0.184000f, -0.695034f, 0.695034f,
		0.695034f, -0.695033f, 0.184001f,
		0.695034f, -0.695034f, -0.184001f,
		0.184000f, -0.695034f, -0.695034f,
		-0.184000f, -0.695034f, -0.695034f,
		-0.577350f, -0.577350f, 0.577350f,
		0.577350f, -0.577350f, 0.577350f,
		-0.577350f, -0.577350f, -0.577350f,
		0.577350f, -0.577350f, -0.577350f,
		0.185406f, -0.185407f, 0.965012f,
		-0.185406f, 0.185407f, 0.965012f,
		0.185406f, 0.185407f, 0.965012f,
		-0.185406f, -0.185407f, 0.965012f,
		0.184000f, -0.695034f, 0.695034f,
		-0.184000f, -0.695034f, 0.695034f,
		-0.695034f, -0.184001f, 0.695034f,
		-0.695034f, 0.184000f, 0.695034f,
		0.695034f, 0.184001f, 0.695034f,
		0.695034f, -0.184001f, 0.695034f,
		-0.184000f, 0.695034f, 0.695034f,
		0.184000f, 0.695034f, 0.695034f,
		-0.577350f, -0.577350f, 0.577350f,
		0.577350f, -0.577350f, 0.577350f,
		-0.577350f, 0.577350f, 0.577351f,
		0.577350f, 0.577350f, 0.577350f,
		-0.965012f, 0.185406f, 0.185407f,
		-0.965012f, -0.185406f, -0.185407f,
		-0.965012f, 0.185407f, -0.185407f,
		-0.965012f, -0.185407f, 0.185407f,
		-0.695034f, -0.695034f, 0.184001f,
		-0.695034f, -0.695033f, -0.184001f,
		-0.695034f, 0.184000f, 0.695034f,
		-0.695034f, -0.184001f, 0.695034f,
		-0.695034f, 0.695034f, -0.184001f,
		-0.695034f, 0.695033f, 0.184001f,
		-0.695034f, -0.184001f, -0.695034f,
		-0.695034f, 0.184001f, -0.695034f,
		-0.577350f, -0.577350f, 0.577350f,
		-0.577350f, 0.577350f, 0.577351f,
		-0.577350f, 0.577350f, -0.577350f,
		-0.577350f, -0.577350f, -0.577350f,
		0.965012f, -0.185407f, -0.185407f,
		0.965012f, 0.185407f, 0.185407f,
		0.965012f, 0.185406f, -0.185407f,
		0.965012f, -0.185406f, 0.185407f,
		0.695034f, -0.695034f, -0.184001f,
		0.695034f, -0.695033f, 0.184001f,
		0.695034f, -0.184001f, 0.695034f,
		0.695034f, 0.184001f, 0.695034f,
		0.695034f, 0.695034f, 0.184001f,
		0.695034f, 0.695033f, -0.184001f,
		0.695034f, 0.184000f, -0.695034f,
		0.695034f, -0.184001f, -0.695034f,
		0.577350f, -0.577350f, 0.577350f,
		0.577350f, 0.577350f, 0.577350f,
		0.577350f, 0.577350f, -0.577351f,
		0.577350f, -0.577350f, -0.577350f,
		0.185407f, 0.965012f, 0.185406f,
		-0.185407f, 0.965012f, -0.185406f,
		0.185407f, 0.965012f, -0.185407f,
		-0.185407f, 0.965012f, 0.185407f,
		-0.695034f, 0.695033f, 0.184001f,
		-0.695034f, 0.695034f, -0.184001f,
		0.184000f, 0.695034f, 0.695034f,
		-0.184000f, 0.695034f, 0.695034f,
		0.695034f, 0.695033f, -0.184001f,
		0.695034f, 0.695034f, 0.184001f,
		-0.184000f, 0.695034f, -0.695034f,
		0.184000f, 0.695034f, -0.695034f,
		-0.577350f, 0.577350f, 0.577351f,
		0.577350f, 0.577350f, 0.577350f,
		-0.577350f, 0.577350f, -0.577350f,
		0.577350f, 0.577350f, -0.577351f,
		0.185406f, 0.185407f, -0.965012f,
		-0.185406f, -0.185407f, -0.965012f,
		0.185406f, -0.185407f, -0.965012f,
		-0.185406f, 0.185407f, -0.965012f,
		-0.695034f, 0.184001f, -0.695034f,
		-0.695034f, -0.184001f, -0.695034f,
		0.184000f, 0.695034f, -0.695034f,
		-0.184000f, 0.695034f, -0.695034f,
		0.695034f, -0.184001f, -0.695034f,
		0.695034f, 0.184000f, -0.695034f,
		-0.184000f, -0.695034f, -0.695034f,
		0.184000f, -0.695034f, -0.695034f,
		-0.577350f, 0.577350f, -0.577350f,
		0.577350f, 0.577350f, -0.577351f,
		-0.577350f, -0.577350f, -0.577350f,
		0.577350f, -0.577350f, -0.577350f
	};
	static float[] texcoords = {
		0.028066f, 0.973263f,
		0.323094f, 0.693273f,
		0.323094f, 0.973263f,
		0.028066f, 0.693273f,
		0.001992f, 0.973263f,
		0.001992f, 0.693273f,
		0.028066f, 0.668528f,
		0.323094f, 0.668528f,
		0.349168f, 0.693273f,
		0.349168f, 0.973263f,
		0.323094f, 0.998008f,
		0.028066f, 0.998008f,
		0.007083f, 0.673360f,
		0.344077f, 0.673360f,
		0.007083f, 0.993176f,
		0.344077f, 0.993176f,
		0.677998f, 0.973263f,
		0.382970f, 0.693273f,
		0.677998f, 0.693273f,
		0.382970f, 0.973263f,
		0.677998f, 0.998008f,
		0.382970f, 0.998008f,
		0.356896f, 0.973263f,
		0.356896f, 0.693273f,
		0.704072f, 0.693273f,
		0.704072f, 0.973263f,
		0.382970f, 0.668528f,
		0.677998f, 0.668528f,
		0.361987f, 0.993176f,
		0.698981f, 0.993176f,
		0.361987f, 0.673360f,
		0.698981f, 0.673360f,
		0.971934f, 0.360005f,
		0.676906f, 0.639995f,
		0.676906f, 0.360005f,
		0.971934f, 0.639995f,
		0.971934f, 0.664740f,
		0.676906f, 0.664740f,
		0.998008f, 0.360005f,
		0.998008f, 0.639995f,
		0.676906f, 0.335260f,
		0.971934f, 0.335260f,
		0.650832f, 0.639995f,
		0.650832f, 0.360005f,
		0.992917f, 0.659908f,
		0.992917f, 0.340092f,
		0.655923f, 0.340092f,
		0.655923f, 0.659908f,
		0.618623f, 0.639995f,
		0.323595f, 0.360005f,
		0.618623f, 0.360005f,
		0.323595f, 0.639995f,
		0.618623f, 0.664740f,
		0.323595f, 0.664740f,
		0.297521f, 0.639995f,
		0.297521f, 0.360005f,
		0.323595f, 0.335260f,
		0.618623f, 0.335260f,
		0.644697f, 0.360005f,
		0.644697f, 0.639995f,
		0.302612f, 0.659908f,
		0.302612f, 0.340092f,
		0.639606f, 0.340092f,
		0.639606f, 0.659908f,
		0.323094f, 0.306727f,
		0.028066f, 0.026737f,
		0.323094f, 0.026737f,
		0.028066f, 0.306727f,
		0.001992f, 0.306727f,
		0.001992f, 0.026737f,
		0.323094f, 0.331472f,
		0.028066f, 0.331472f,
		0.349168f, 0.026737f,
		0.349168f, 0.306727f,
		0.028066f, 0.001992f,
		0.323094f, 0.001992f,
		0.007083f, 0.326640f,
		0.344077f, 0.326640f,
		0.007083f, 0.006824f,
		0.344077f, 0.006824f,
		0.677998f, 0.306727f,
		0.382970f, 0.026737f,
		0.677998f, 0.026737f,
		0.382970f, 0.306727f,
		0.356896f, 0.306727f,
		0.356896f, 0.026737f,
		0.677998f, 0.331472f,
		0.382970f, 0.331472f,
		0.704072f, 0.026737f,
		0.704072f, 0.306727f,
		0.382970f, 0.001992f,
		0.677998f, 0.001992f,
		0.361987f, 0.326640f,
		0.698981f, 0.326640f,
		0.361987f, 0.006824f,
		0.698981f, 0.006824f,
	};
	static int[] faces = {
		2, 1, 0,
		1, 3, 0,
		4, 0, 3,
		5, 4, 3,
		3, 1, 6,
		3, 6, 5,
		1, 7, 6,
		1, 2, 8,
		1, 8, 7,
		2, 9, 8,
		10, 2, 0,
		2, 10, 9,
		11, 10, 0,
		0, 4, 11,
		6, 12, 5,
		8, 13, 7,
		4, 14, 11,
		10, 15, 9,
		18, 17, 16,
		17, 19, 16,
		20, 16, 19,
		21, 20, 19,
		19, 17, 22,
		19, 22, 21,
		17, 23, 22,
		24, 18, 16,
		25, 24, 16,
		16, 20, 25,
		17, 18, 26,
		17, 26, 23,
		18, 27, 26,
		18, 24, 27,
		22, 28, 21,
		20, 29, 25,
		26, 30, 23,
		24, 31, 27,
		34, 33, 32,
		33, 35, 32,
		35, 33, 36,
		33, 37, 36,
		38, 32, 35,
		39, 38, 35,
		35, 36, 39,
		40, 34, 32,
		41, 40, 32,
		32, 38, 41,
		42, 33, 34,
		33, 42, 37,
		43, 42, 34,
		34, 40, 43,
		36, 44, 39,
		38, 45, 41,
		40, 46, 43,
		42, 47, 37,
		50, 49, 48,
		49, 51, 48,
		52, 48, 51,
		53, 52, 51,
		51, 49, 54,
		51, 54, 53,
		49, 55, 54,
		49, 50, 56,
		49, 56, 55,
		50, 57, 56,
		50, 48, 58,
		50, 58, 57,
		48, 59, 58,
		48, 52, 59,
		54, 60, 53,
		56, 61, 55,
		58, 62, 57,
		52, 63, 59,
		66, 65, 64,
		65, 67, 64,
		67, 65, 68,
		65, 69, 68,
		70, 64, 67,
		71, 70, 67,
		67, 68, 71,
		72, 66, 64,
		73, 72, 64,
		64, 70, 73,
		65, 66, 74,
		65, 74, 69,
		66, 75, 74,
		66, 72, 75,
		68, 76, 71,
		70, 77, 73,
		74, 78, 69,
		72, 79, 75,
		82, 81, 80,
		81, 83, 80,
		83, 81, 84,
		81, 85, 84,
		86, 80, 83,
		87, 86, 83,
		83, 84, 87,
		88, 82, 80,
		89, 88, 80,
		80, 86, 89,
		81, 82, 90,
		81, 90, 85,
		82, 91, 90,
		82, 88, 91,
		84, 92, 87,
		86, 93, 89,
		90, 94, 85,
		88, 95, 91
	};
}
